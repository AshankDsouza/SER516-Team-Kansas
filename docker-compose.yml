version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"  # Adjust the port as needed
    restart: unless-stopped


  velocitymicroservice:
    build:
      context: ./velocity
      dockerfile: Dockerfile
    ports:
      - "8090:8090"  # Adjust the port as needed
    restart: unless-stopped

  leadtimemicroservice:
    build:
      context: ./leadtime
      dockerfile: Dockerfile
    ports:
      - "8060:8060"  # Adjust the port as needed
    restart: unless-stopped
    
  burndownmicroservice:
    build:
      context: ./burndown
      dockerfile: Dockerfile
    ports:
      - "8081:8081"  # Adjust the port as needed
    restart: unless-stopped

  cycletimemicroservice:
    build:
      context: ./cycleTime
      dockerfile: Dockerfile
    ports:
      - "8070:8070"  # Adjust the port as needed
    restart: unless-stopped
  
  estimateeffectivenessmicroservice:
    build:
      context: ./estimateEffectiveness
      dockerfile: Dockerfile
    ports:
      - "8050:8050"  # Adjust the port as needed
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"  # Adjust the port as needed
    restart: unless-stopped


  nginx:
    image: nginx:latest
    ports:
      - "80:80"  # Expose port 80 of Nginx to the outside world
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount a custom nginx configuration if needed
    depends_on:
      - client
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:
