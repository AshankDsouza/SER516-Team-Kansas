events {
    worker_connections 1024;
}

http {
    upstream backend {
        server backend:8080;  # Name of the backend service defined in docker-compose.yml
    }

    upstream client {
        server client:3000;  # Name of the client service defined in docker-compose.yml
    }

    upstream portainer {
        server portainer:9000;  # "Name of the portainer service defined in docker-compose.yml"
    }


    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://client;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 8080;
        server_name localhost;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

        server {
        listen 9000;
        server_name localhost;

        location / {
            proxy_pass http://portainer;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
